[tox]
envlist = py3{7,8,9,10,11}
skip_missing_interpreters = true
isolated_build = true
skipsdist = true

[base]
deps =
    pip>=22.1

[testenv]
skip_install = true
install_command = pip install {opts} {packages}
[testenv:{sync,do}]
envdir = {toxinidir}/.sync
# these 2 tox env cmds share a virtual env using the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch
runner = ignore_env_name_mismatch

description =
    do: Run cmd following "--" from the sync .env, e.g. "tox -e do -- repolite --show"
    sync: Install repolite and use it for cloning worflow deps (need swupdate packet script)

passenv =
    REPO_CFG
    ROCKCHIP_TPL
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    CI
    LANG
    LC_COLLATE
    SSH_*
    GID
    UID
    XDG_*
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    # logging_tree
    {[base]deps}
    -r requirements-sync.txt

commands =
    sync: repolite {posargs:--quiet}
    do: {posargs:python -c 'print("No cmd provided")'}

[testenv:{tfa,uboot,update}]
envdir = {toxinidir}/.venv
# these 3 tox env cmds share a virtual env using the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch
runner = ignore_env_name_mismatch

description =
    {tfa,uboot}: Build using default repolite locked config file (currently 2023.10 and 2.10.0)
    update: Run repolite --update using $REPO_CFG (defaults to .repolite-locked.yml)

allowlist_externals =
    bash
    make

setenv =
    CPUS = {env:CPUS:4}
    {tfa,uboot}: CC = {env:CC:aarch64-unknown-linux-gnu-}
    PLAT = {env:PLAT:rk3328}
    REPO_CFG = {env:REPO_CFG}
    uboot: UBOOT_CFG = {env:UBOOT_CFG:roc-cc-rk3328_defconfig}
    SRCS = {env:SRCS:{toxinidir}/ext}
    uboot: BL31 = {env:BL31:{env:SRCS}/tfa/build/{env:PLAT}/release/bl31/bl31.elf}

passenv =
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    XDG_*
    CI
    GITHUB*
    OS
    LANG
    LC_COLLATE
    SSH_*
    GID
    UID
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    -r requirements-sync.txt

commands =
    update: repolite --update
    tfa: make -C ext/tfa distclean
    tfa: make CROSS_COMPILE={env:CC} PLAT={env:PLAT} -C ext/tfa
    uboot: make CROSS_COMPILE={env:CC} {env:UBOOT_CFG} -C ext/u-boot
    uboot: make CROSS_COMPILE={env:CC} -j{env:CPUS} -C ext/u-boot
    uboot: bash -c 'cp -v ext/u-boot/u-boot-rockchip.bin .'

[testenv:clean]
skip_install = true
allowlist_externals =
    bash

setenv =
    {[testenv:uboot]setenv}

passenv =
    {[testenv:uboot]passenv}

deps =
    pip>=21.1

commands =
    bash -c 'for dir in {ext/tfa,ext/u-boot}; do make -C $dir clean & make -C $dir distclean;done'
    bash -c 'rm -rf __pycache__'
