[tox]
envlist = py3{7,8,9,10,11}
skip_missing_interpreters = true
isolated_build = true
skipsdist = true

[base]
deps =
    pip>=22.1

[testenv]
skip_install = true
install_command = pip install {opts} {packages}
[testenv:{sync,do}]
envdir = {toxinidir}/.sync
# these 2 tox env cmds share a virtual env using the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch
runner = ignore_env_name_mismatch

description =
    do: Run cmd following "--" from the sync .env, e.g. "tox -e do -- repolite --show"
    sync: Install repolite and use it for cloning worflow deps (need swupdate packet script)

passenv =
    REPO_CFG
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    CI
    LANG
    LC_COLLATE
    SSH_*
    GID
    UID
    XDG_*
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    # logging_tree
    {[base]deps}
    -r requirements-sync.txt

commands =
    sync: repolite {posargs:--quiet}
    do: {posargs:python -c 'print("No cmd provided")'}

[testenv:{build,update}]
envdir = {toxinidir}/.venv
# these 2 tox env cmds share a virtual env using the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch
runner = ignore_env_name_mismatch

description =
    build: Build using default repolite locked config file (currently 2022.10 and 2.8-lts)
    update: Run repolite --update using $REPO_CFG (defaults to .repolite-locked.yml)

allowlist_externals =
    bash
    make

setenv =
    CC = {env:CC:aarch64-unknown-linux-gnu-}
    CM3 = {env:CM3:arm-none-eabi-}
    PLAT = {env:PLAT:a3700}
    DDR = {env:DDR:2}
    CLOCKS = {env:CLOCKS:CPU_1000_DDR_800}
    REPO_CFG = {env:REPO_CFG:.repolite-locked.yml}
    UBOOT_CFG = {env:UBOOT_CFG:mvebu_espressobin-88f3720_defconfig}
    SRCS = {env:SRCS:ext}
    DDR_PATH = {env:DDR_PATH:mv-ddr}
    WTP = {env:WTP:mv-utils}
    CRYPTOPP_PATH = {env:CRYPTOPP_PATH:cryptopp/}
    WTMI_IMG = {env:WTMI_IMG:mox-boot/wtmi_app.bin}
    BL33 = {env:BL33:u-boot/u-boot.bin}

passenv =
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    XDG_*
    CI
    GITHUB*
    OS
    LANG
    LC_COLLATE
    SSH_*
    GID
    UID
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    -r requirements-sync.txt

changedir =
    build: {env:SRCS}

commands =
    update: repolite --update
    build: make -C u-boot CROSS_COMPILE={env:CC} {env:UBOOT_CFG} u-boot.bin
    build: make -C mox-boot CROSS_CM3={env:CM3} wtmi_app.bin
    build: make -C tfa CROSS_COMPILE={env:CC} CROSS_CM3={env:CM3} USE_COHERENT_MEM=0 PLAT={env:PLAT} CLOCKSPRESET={env:CLOCKS} DDR_TOPOLOGY={env:DDR} MV_DDR_PATH={env:DDR_PATH} WTP={env:WTP} CRYPTOPP_PATH={env:CRYPTOPP_PATH} BL33={env:BL33} WTMI_IMG={env:WTMI_IMG} FIP_ALIGN=0x100 mrvl_flash -j8

[testenv:clean]
skip_install = true
allowlist_externals =
    bash

setenv =
    SRCS = {env:SRCS:ext}
    REPO_DIRS = {env:REPO_DIRS:cryptopp mox-boot mv-ddr mv-utils tfa u-boot}

deps =
    pip>=21.1

commands =
    bash -c 'for dir in {env:REPO_DIRS}; do make -C {env:SRCS}/$dir clean & make -C {env:SRCS}/$dir distclean & done'
